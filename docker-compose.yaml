services:
  # PostgreSQL database for the user management service
  user-db:
    image: postgres:latest
    container_name: user-db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: user-db
    ports:
      - "5432:5432"
    networks:
      - chatroom-network

  # PostgreSQL database for the auth service
  auth-db:
    image: postgres:latest
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: auth-db
    ports:
      - "5433:5432"
    networks:
      - chatroom-network

  # PostgreSQL database for the chat service
  chat-db:
    image: postgres:latest
    container_name: chat-db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: chat-db
    ports:
      - "5434:5432"
    networks:
      - chatroom-network

  # Auth Redis service
  auth-redis:
    image: redis:latest
    container_name: auth-redis
    restart: always
    ports:
      - "6378:6379"
    networks:
      - chatroom-network

  # Chat Redis service
  chat-redis:
    image: redis:latest
    container_name: chat-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - chatroom-network

  # User management service
  user-service:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    ports:
      - "3000:3000"
      - "8080:8080" # gRPC server
    depends_on:
      - user-db
    networks:
      - chatroom-network

  # Auth service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    ports:
      - "3001:3001"
      - "8081:8081" # gRPC server
    depends_on:
      - auth-db
    networks:
      - chatroom-network

  # Chat service
  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    container_name: chat-service
    restart: always
    ports:
      - "3002:3002"
      # - "8082:8082" # gRPC server
    depends_on:
      - chat-db
      - chat-redis
    networks:
      - chatroom-network

networks:
  chatroom-network:
    driver: bridge
